# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish on NPM

on:
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -   uses: actions/checkout@v3
      -   uses: actions/setup-node@v3
          with:
            node-version: 20.11.0
            registry-url: https://registry.npmjs.org/
      -   run: corepack enable
      -   run: yarn install
      -   run: npm run build
      -   run: |
            is_first_release=false
            pkgname=$(node -p "require('./package.json').name")
            pkgversion=$(node -p -e "require('./package.json').version")
            prerelease=$(node -p "require('./package.json').version.split('-')[1]?.split('.')[0] || ''")
            echo checking prerelease marker: $prerelease
            
            if npm view "$pkgname" > /dev/null 2>&1; then
              echo "Package $pkgname is published. Checking dist-tags..."
            
              if npm dist-tag ls "$pkgname" | grep -q '^next:'; then
                if [[ "$pkgversion" =~ \.0\.0$ ]]; then
                  echo "New major version detected. Removing 'next' dist-tag..."
                  npm dist-tag remove "$pkgname" next
                fi
              else
                echo "No 'next' dist-tag found, skipping removal."
              fi
            else
              echo "Package $pkgname not published yet. Setting first release flag."
              is_first_release=true
            fi                    
            if [[ -n "$prerelease" ]]; then
              npm run "release:$prerelease"
            else
              if [[ "$is_first_release" == true ]]; then
                echo "First release detected. Using --access public."
                npm run release --access public
              else
                npm run release
              fi
            fi
          env:
            NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
